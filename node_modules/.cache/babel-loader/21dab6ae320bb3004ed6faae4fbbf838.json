{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\USER-PC\\\\Desktop\\\\03 Files\\\\code\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport React from \"react\";\nimport Chart from \"../Chart/Chart.js\";\nvar ExpensesChart = function ExpensesChart(props) {\n  var chartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n\n  // props.expenses.forEach((expense) => {\n  //   const expenseMonth = expense.date.getmonth();\n  //   return (chartDataPoints[expenseMonth].value += expense.amount);\n  // });\n\n  console.log(props);\n  var _iterator = _createForOfIteratorHelper(props.expenses),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var expense = _step.value;\n      var expenseMonth = expense.date.getMonth(); // staring az 0 (jan = 0)\n      chartDataPoints[expenseMonth].value += expense.amount;\n      console.log(chartDataPoints[expenseMonth].value);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return /*#__PURE__*/React.createElement(Chart, {\n    dataPoints: chartDataPoints,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  });\n};\nexport default ExpensesChart;","map":{"version":3,"names":["React","Chart","ExpensesChart","props","chartDataPoints","label","value","console","log","expenses","expense","expenseMonth","date","getMonth","amount"],"sources":["C:/Users/USER-PC/Desktop/03 Files/code/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart.js\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  // props.expenses.forEach((expense) => {\r\n  //   const expenseMonth = expense.date.getmonth();\r\n  //   return (chartDataPoints[expenseMonth].value += expense.amount);\r\n  // });\r\n\r\n  console.log(props);\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // staring az 0 (jan = 0)\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n    console.log(chartDataPoints[expenseMonth].value);\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,mBAAmB;AAErC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAK,EAAK;EAC/B,IAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC3B;;EAED;EACA;EACA;EACA;;EAEAC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAAC,2CAEGA,KAAK,CAACM,QAAQ;IAAA;EAAA;IAApC,oDAAsC;MAAA,IAA3BC,OAAO;MAChB,IAAMC,YAAY,GAAGD,OAAO,CAACE,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;MAC9CT,eAAe,CAACO,YAAY,CAAC,CAACL,KAAK,IAAII,OAAO,CAACI,MAAM;MACrDP,OAAO,CAACC,GAAG,CAACJ,eAAe,CAACO,YAAY,CAAC,CAACL,KAAK,CAAC;IAClD;EAAC;IAAA;EAAA;IAAA;EAAA;EAED,oBAAO,oBAAC,KAAK;IAAC,UAAU,EAAEF,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG;AAC/C,CAAC;AAED,eAAeF,aAAa"},"metadata":{},"sourceType":"module"}